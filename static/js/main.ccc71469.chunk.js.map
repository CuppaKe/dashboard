{"version":3,"sources":["header.js","select.js","tableDraw.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","customStyles","container","provided","Object","objectSpread","width","margin","margin-top","margin-bottom","option","color","padding","singleValue","MentorSelect","_ref","list","setMentor","state","react_select_esm","placeholder","styles","options","onChange","defaultValue","DrawTable","students","tasksList","mentor","head","entries","map","_ref2","_ref3","slicedToArray","task","value","key","href","link","rel","target","body","student","result","tasks","status","score","replace","name","concat","github","length","colSpan","rowSpan","App","localStorage","JSON","parse","getItem","handleMentor","mentorValue","data","mentors","find","label","_this","setState","setItem","stringify","_this$state$mentor","this","listOfMentors","unit","currentMentor","el","header","src_select","tableDraw","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"s04dAQeA,EANA,kBACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,mDCAEE,EAAe,CACnBC,UAAW,SAAAC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACdD,EADc,CAEjBG,MAAO,MACPC,OAAQ,OACRC,aAAc,GACdC,gBAAiB,MAEnBC,OAAQ,SAAAP,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACXD,EADW,CAEdQ,MAAO,QACPC,QAAS,MAEXC,YAAa,SAACV,GAGZ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAZ,CAAsBQ,MAFR,YA2BHG,EArBM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,UAAWC,EAApBH,EAAoBG,MAApB,OACnBrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CACEC,YAAY,mBACZC,OAAQpB,EACRqB,QAASN,EACTO,SAAUN,EACVO,aAAcN,aCiCHO,EA5DG,SAAAV,GAAqC,IAAlCW,EAAkCX,EAAlCW,SAAUC,EAAwBZ,EAAxBY,UAAWC,EAAab,EAAba,OAClCC,EAAOzB,OAAO0B,QAAQH,GAAWI,IAAI,SAAAC,GAAA,IAAAC,EAAA7B,OAAA8B,EAAA,EAAA9B,CAAA4B,EAAA,GAAEG,EAAFF,EAAA,GAAQG,EAARH,EAAA,UAAmBpC,EAAAC,EAAAC,cAAA,MAAIsC,IAAKF,GAAMtC,EAAAC,EAAAC,cAAA,KAAGuC,KAAMF,EAAMG,KAAMC,IAAI,sBAAsBC,OAAO,UAAUN,MAEvIO,EAAOhB,EAASK,IAAI,SAACY,GAAY,IAG/BC,EAFYD,EAAVE,MAEad,IAAI,SAACI,GACxB,IAAMnC,EAA4B,YAAhBmC,EAAKW,QAAuC,IAAfX,EAAKY,MAAc,UAAYZ,EAAKW,OAAOE,QAAQ,IAAK,KACvG,OAAOnD,EAAAC,EAAAC,cAAA,MAAIsC,IAAKF,EAAKc,KAAKC,OAAO,QAASlD,UAAWA,GAAYmC,EAAKY,SAGxE,OACElD,EAAAC,EAAAC,cAAA,MAAIsC,IAAKM,EAAQA,SACf9C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,KAAGuC,KAAMK,EAAQQ,OAAQX,IAAI,sBAAsBC,OAAO,UAAUE,EAAQA,UAC1GC,KAKP,OAAOlB,EAAS0B,OAEZvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIsD,QAAQ,KAAKrD,UAAU,iBACxB,WACDH,EAAAC,EAAAC,cAAA,YAAO6B,KAGX/B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIuD,QAAQ,KAAZ,YACAzD,EAAAC,EAAAC,cAAA,MAAIsD,QAAQ,MAAZ,UAEFxD,EAAAC,EAAAC,cAAA,UACG8B,IAGLhC,EAAAC,EAAAC,cAAA,aACG2C,IAGL7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,mBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,uBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,0BACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,mBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,sBAIJH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,oCCbSuD,6MAjCbrC,MAAQsC,aAAa5B,OAAS,CAAEA,OAAQ6B,KAAKC,MAAMF,aAAaG,QAAQ,YAAe,CAAE/B,OAAQ,CAAEA,OAAQ,GAAIuB,OAAQ,GAAIzB,SAAU,OAErIkC,aAAe,SAACxB,GACd,IAAMyB,EAAcC,EAAKC,QAAQC,KAAK,SAAApC,GAAM,OAAIA,EAAOA,SAAWQ,EAAM6B,QACxEC,EAAKC,SAAS,CAAEvC,OAAQiC,IACxBL,aAAaY,QAAQ,SAAUX,KAAKY,UAAUR,6EAGvC,IAAAS,EAC0CC,KAAKrD,MAA9CU,OAAUA,EADX0C,EACW1C,OAAQuB,EADnBmB,EACmBnB,OAAQzB,EAD3B4C,EAC2B5C,SAC1BmB,EAAmBiB,EAAnBjB,MAEF2B,EAFqBV,EAAZC,QAEehC,IAAI,SAAA0C,GAAI,MAAK,CAAErC,MAAK,GAAAc,OAAKuB,EAAK7C,OAAV,KAAAsB,OAAoBuB,EAAKtB,QAAUc,MAAOQ,EAAK7C,UAC3F8C,EAAgBF,EAAcR,KAAK,SAAAW,GAAE,OAAIA,EAAGV,QAAUrC,IAE5D,OACE/B,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAC8E,EAAD,CACE7D,KAAMwD,EACNvD,UAAWsD,KAAKX,aAChB1C,MAAOwD,IAET7E,EAAAC,EAAAC,cAAC+E,EAAD,CACElD,OAAQuB,EACRzB,SAAUA,EACVC,UAAWkB,YA3BHkC,aCFlBC,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ccc71469.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <div className=\"header-container\">\n    <h1>RSS-Mentor-Dashboard</h1>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    width: '50%',\n    margin: 'auto',\n    'margin-top': 20,\n    'margin-bottom': 20,\n  }),\n  option: provided => ({\n    ...provided,\n    color: 'green',\n    padding: 10,\n  }),\n  singleValue: (provided) => {\n    const color = 'green';\n\n    return { ...provided, color };\n  },\n};\n\nconst MentorSelect = ({ list, setMentor, state }) => (\n  <Select\n    placeholder=\"Choose mentor...\"\n    styles={customStyles}\n    options={list}\n    onChange={setMentor}\n    defaultValue={state}\n  />\n);\n\nMentorSelect.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setMentor: PropTypes.func.isRequired,\n  state: PropTypes.shape(\n    {\n      value: PropTypes.string,\n      label: PropTypes.string,\n    },\n  ).isRequired,\n};\n\nexport default MentorSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DrawTable = ({ students, tasksList, mentor }) => {\n  const head = Object.entries(tasksList).map(([task, value]) => <th key={task}><a href={value.link} rel=\"noopener noreferrer\" target=\"_blank\">{task}</a></th>);\n\n  const body = students.map((student) => {\n    const { tasks } = student;\n\n    const result = tasks.map((task) => {\n      const className = task.status === 'Checked' && task.score === 0 ? 'NotDone' : task.status.replace(' ', '-');\n      return <td key={task.name.concat('-key')} className={className}>{task.score}</td>;\n    });\n\n    return (\n      <tr key={student.student}>\n        <td className=\"student-github\"><a href={student.github} rel=\"noopener noreferrer\" target=\"_blank\">{student.student}</a></td>\n        {result}\n      </tr>\n    );\n  });\n\n  return students.length\n    ? (\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th colSpan=\"11\" className=\"mentor-github\">\n                {'Mentor: '}\n                <span>{mentor}</span>\n              </th>\n            </tr>\n            <tr>\n              <th rowSpan=\"2\">Students</th>\n              <th colSpan=\"10\">Tasks</th>\n            </tr>\n            <tr>\n              {head}\n            </tr>\n          </thead>\n          <tbody>\n            {body}\n          </tbody>\n        </table>\n        <div className=\"table-legend\">\n          <span className=\"table-legend-unit\">Task is checked</span>\n          <span className=\"table-legend-unit\">Task is in progress</span>\n          <span className=\"table-legend-unit\">Task has to be checked</span>\n          <span className=\"table-legend-unit\">Task is planned</span>\n          <span className=\"table-legend-unit\">Task is not done</span>\n        </div>\n      </div>\n    )\n    : <p className=\"message_tip\">Choose mentor to see a table...</p>;\n};\n\nDrawTable.propTypes = {\n  students: PropTypes.arrayOf(PropTypes.object).isRequired,\n  tasksList: PropTypes.shape(PropTypes.shape).isRequired,\n  mentor: PropTypes.string.isRequired,\n};\n\nexport default DrawTable;\n","import React, { Component } from 'react';\nimport data from './data/data.json';\nimport Header from './header';\nimport MentorSelect from './select';\nimport DrawTable from './tableDraw';\n\n\nclass App extends Component {\n  state = localStorage.mentor ? { mentor: JSON.parse(localStorage.getItem('mentor')) } : { mentor: { mentor: '', github: '', students: [] } };\n\n  handleMentor = (value) => {\n    const mentorValue = data.mentors.find(mentor => mentor.mentor === value.label);\n    this.setState({ mentor: mentorValue });\n    localStorage.setItem('mentor', JSON.stringify(mentorValue));\n  };\n\n  render() {\n    const { mentor: { mentor, github, students } } = this.state;\n    const { tasks, mentors } = data;\n\n    const listOfMentors = mentors.map(unit => ({ value: `${unit.mentor} ${unit.github}`, label: unit.mentor }));\n    const currentMentor = listOfMentors.find(el => el.label === mentor);\n\n    return (\n      <section>\n        <Header />\n        <MentorSelect\n          list={listOfMentors}\n          setMentor={this.handleMentor}\n          state={currentMentor}\n        />\n        <DrawTable\n          mentor={github}\n          students={students}\n          tasksList={tasks}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}